version: 2
defaults: &defaults
  working_directory: /go/src/istio.io/istio
  docker:
    - image: istio/ci:go1.9-k8s1.7.4

integrationDefaults: &integrationDefaults
  machine: true
  working_directory: /go/src/istio.io/istio #same as docker
  environment:
    CHANGE_MINIKUBE_NONE_USER: true
    HUB: docker.io/dnerepo
    TAG: dontpush
    GOPATH: /go

jobs:
  e2e:
    <<: *integrationDefaults
    steps:
      - environment:
        - KUBECONFIG: /go/out/minikube.conf
        - TEST_ENV: minikube
      - type: shell
        name: Initialize Working Directory
        pwd: /
        command: |
          sudo mkdir -p /go/src/istio.io/istio
          sudo chown -R circleci /go
      - checkout
      - run: curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run: curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.22.3/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          command: |
            mkdir -p /go/out
            mkdir /home/circleci/logs
            sudo -E minikube start \
            --extra-config=apiserver.Admission.PluginNames="Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,GenericAdmissionWebhook,ResourceQuota" \
            --kubernetes-version=v1.7.5 --vm-driver=none

            sudo -E minikube update-context
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run: JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      - run: sudo -E kubectl cluster-info
      - run:
          command: |
            make e2e_simple
      - store_artifacts:
          path: /home/circleci/logs

  pilot-integration-auth:
    <<: *integrationDefaults
    steps:
      - type: shell
        name: Initialize Working Directory
        pwd: /
        command: |
          sudo mkdir -p /go/src/istio.io/istio
          sudo chown -R circleci /go
      - checkout
      - run: curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run: curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.22.3/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          command: |
            sudo -E minikube start \
            --extra-config=apiserver.Admission.PluginNames="Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,GenericAdmissionWebhook,ResourceQuota" \
            --kubernetes-version=v1.7.5 --vm-driver=none
      - run: sudo -E minikube update-context
      - run: bin/install-go.sh
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            cd /go/src/istio.io/istio
            if [ ! -d vendor ]; then
               dep ensure
            fi
      - run: cd pilot; bin/gocompile-and-push-images.sh -hub $HUB -tag $TAG -build-only
      - run: mkdir /home/circleci/logs
      - run: go build -i ./pilot/test/integration
      - run: JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      - run: sudo -E kubectl cluster-info
      - run: make kubelink
      - run: ./integration --logtostderr -hub $HUB -tag $TAG -mixer=false -auth=enable -errorlogsdir=/home/circleci/logs -use-initializer
      - store_artifacts:
          path: /home/circleci/logs

  pilot-integration-noauth:
    <<: *integrationDefaults
    steps:
      - type: shell
        name: Initialize Working Directory
        pwd: /
        command: |
          sudo mkdir -p /go/src/istio.io/istio
          sudo chown -R circleci /go
      - checkout
      - run: curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run: curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.22.3/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          command: |
            sudo -E minikube start \
            --extra-config=apiserver.Admission.PluginNames="Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,GenericAdmissionWebhook,ResourceQuota" \
            --kubernetes-version=v1.7.5 --vm-driver=none
      - run: sudo -E minikube update-context
      - run: bin/install-go.sh
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            cd /go/src/istio.io/istio
            if [ ! -d vendor ]; then
               dep ensure
            fi
      - run: cd pilot; bin/gocompile-and-push-images.sh -hub $HUB -tag $TAG -build-only
      - run: mkdir /home/circleci/logs
      - run: go build -i ./pilot/test/integration
      - run: JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      - run: sudo -E kubectl cluster-info
      - run: make kubelink
      - run: ./integration --logtostderr -hub $HUB -tag $TAG -mixer=false -auth=disable -errorlogsdir=/home/circleci/logs -use-initializer
      - store_artifacts:
          path: /home/circleci/logs

  dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            cd /go/src/istio.io/istio
            if [ ! -d vendor ]; then
               dep ensure
            fi
      - save_cache:
          key: dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
          paths:
            - /go/src/istio.io/istio/vendor

  codecov:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - run: mkdir -p /tmp/coverage
      - run:
          name: Running Kubernetes API Server standalone
          command: /tmp/apiserver/start-test-server.sh
          background: true
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            cd /go/src/istio.io/istio
            if [ ! -d vendor ]; then
               dep ensure
            fi
      - run:
          command: |
            mkdir ~/.kube
            cp /go/src/istio.io/istio/.circleci/config ~/.kube/config
            ln -s ~/.kube/config /go/src/istio.io/istio/pilot/platform/kube/config
      - run:
          command: |
            mkdir ~/envoy
            cd ~/envoy
            ISTIO_PROXY_BUCKET=$(sed 's/ = /=/' <<< $( awk '/ISTIO_PROXY_BUCKET =/' /go/src/istio.io/istio/WORKSPACE))
            PROXYVERSION=$(sed 's/[^"]*"\([^"]*\)".*/\1/' <<<  $ISTIO_PROXY_BUCKET)
            PROXY=debug-$PROXYVERSION
            wget -qO- https://storage.googleapis.com/istio-build/proxy/envoy-$PROXY.tar.gz | tar xvz
            ln -sf ~/envoy/usr/local/bin/envoy /go/src/istio.io/istio/pilot/proxy/envoy/envoy
      - run: cd /go/src/istio.io/istio; maxprocs=6 bin/parallel-codecov.sh pilot
      - run:
          command: |
            bash <(curl -s https://codecov.io/bash) -F pilot
      - run:
          command: |
            mkdir ~/.kube
            cp /go/src/istio.io/istio/.circleci/config ~/.kube/config
            ln -s ~/.kube/config /go/src/istio.io/istio/pilot/platform/kube/config
      - run: cd /go/src/istio.io/istio; maxprocs=6 bin/parallel-codecov.sh security
      - run:
          command: |
            bash <(curl -s https://codecov.io/bash) -F security
      - run: cd /go/src/istio.io/istio; maxprocs=6 bin/parallel-codecov.sh broker
      - run:
          command: |
            bash <(curl -s https://codecov.io/bash) -F broker
      - run:
          command: |
            mkdir ~/.kube
            cp /go/src/istio.io/istio/.circleci/config ~/.kube/config
            ln -s ~/.kube/config /go/src/istio.io/istio/pilot/platform/kube/config
      - run: cd /go/src/istio.io/istio; maxprocs=6 bin/parallel-codecov.sh mixer
      - run:
          command: |
            bash <(curl -s https://codecov.io/bash) -F mixer

  docker:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            make docker push
      - store_artifacts:
          path: /go/bin

  gotest:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            make localTestEnv go-test KUBECONFIG=/go/src/istio.io/istio/.circleci/config
      - store_artifacts:
          path: /go/bin

  gobuild:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            cd /go/src/istio.io/istio
            make go-build
      - store_artifacts:
          path: /go/bin

  docker-push:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - setup_remote_docker
      - run:
          command: |
            if [ ! -z "${DOCKER_USER}" ] ; then
              echo "Pushing docker images"
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              make docker push
            fi
      - store_artifacts:
          path: /go/bin

  goxbuild:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "Gopkg.toml" }}-{{ checksum "WORKSPACE" }}
      - run:
          command: |
            cp -a /usr/local/go /go
            export PATH=/go/go/bin:$PATH
            export GOROOT=/go/go
            cd /go/src/istio.io/istio
            make go-build GOOS=darwin KUBECONFIG=/go/src/istio.io/istio/.circleci/config
            make go-build GOOS=linux GOARCH=arm KUBECONFIG=/go/src/istio.io/istio/.circleci/config
      - store_artifacts:
          path: /go/bin

workflows:
  version: 2
  all:
    jobs:
      - dependencies
      - gobuild:
          requires:
            - dependencies
      - gotest:
          requires:
            - gobuild
      - goxbuild:
          requires:
            - gobuild
      - codecov:
          requires:
            - gotest
      - pilot-integration-noauth:
          requires:
            - gotest
      - pilot-integration-auth:
          requires:
            - gotest
      - docker-push:
          context: org-global
          requires:
            - pilot-integration-noauth
      - e2e:
          requires:
            - pilot-integration-noauth
